export default {
    'gui.menuBar.seeProjectPage': 'プロジェクトページを見る',
    'gui.loader.creating': 'プロジェクトを作成中...',
    'gui.smalruby3.crashMessage.description': '申し訳ありません。スモウルビーがクラッシュしたようです。このバグは自動的にスモウルビーチームに報告されました。ページを再読み込みしてください。',
    'gui.smalruby3.gui.defaultProjectTitle': 'スモウルビーのプロジェクト',
    'gui.smalruby3.gui.rubyTab': 'ルビー',
    'gui.smalruby3.previewInfo.betawelcome': 'スモウルビー3.0 ベータ版にようこそ!',
    'gui.smalruby3.previewInfo.label': 'スモウルビー3.0を試してみる',
    'gui.smalruby3.previewInfo.invitation': '私たちは次世代のスモウルビーを開発中です。お試しください!',
    'gui.smalruby3.previewInfo.welcome': 'スモウルビー3.0 プレビュー版にようこそ!',
    'gui.smalruby3.menuBar.downloadRubyCodeToComputer': 'コンピュータにルビーを保存する',
    'gui.smalruby3.menuBar.generateRubyFromCode': 'コードからルビーに変換します',
    'gui.smalruby3.unsupportedBrowser.description': '申し訳ありません。スモウルビー3.0はInternet Explorer、Vivaldi、Opera、Silkをサポートしていません。Google Chrome、Mozilla Firefox、Microsoft Edgeのような新しいブラウザの利用をお勧めします。',
    'gui.smalruby3.webglModal.description': '残念ながら、ブラウザーやコンピューターが{webGlLink}ようです。この技術はスモウルビー3.0の実行に必須です。',
    'gui.smalruby3.alerts.convertRubyToBlocksError': 'ルビーからコードに変換できませんでした。ルビーを修正してください！',
    'gui.smalruby3.telemetryOptIn.label': 'スモウルビーを改善するための利用状況の報告',
    'gui.smalruby3.telemetryOptIn.body1': 'スモウルビーの開発者は世界中でスモウルビーがどのように使われているのかを理解したいと考えています。その手助けのために、みなさんのスモウルビーの利用状況をスモウルビーの開発者に提供していただけないでしょうか。',
    'gui.smalruby3.telemetryOptIn.body2': '提供していただく情報にはどの言語を選択したか、どのブロックを使ったか、保存・読み込み・プロジェクトのアップロードなどのイベントを含みます。ただし、ユーザ名などの個人的な情報は一切含みません。',
    'gui.telemetryOptIn.buttonTextNo': 'いいえ、結構です。',
    'gui.smalruby3.rubyToBlocksConverter.couldNotConvertPremitive': '「{ SOURCE }」はブロックに変換できません。',
    'gui.smalruby3.rubyToBlocksConverter.wrongInstruction': '「{ SOURCE }」は命令がまちがっています。',
    'gui.smalruby3.telemetryOptIn.buttonTextYes': 'はい、スモウルビーの改善に協力します。',
    'gui.smalruby3.extension.mesh.name': 'メッシュ',
    'gui.smalruby3.extension.mesh.description': 'ネットワーク上でユーザー間のやりとりを行う。',
    //
    "gui.kanirobo1.name": "かにロボ1",
    "gui.kanirobo1.description": "かにロボブロック (簡単)",
    "gui.kanirobo1v2.name": "かにロボ1v2",
    "gui.kanirobo1v2.description": "かにロボブロック (簡単 v2)",
    "gui.kanirobo2.name": "かにロボ2",
    "gui.kanirobo2.description": "かにロボブロック (普通)",
    "gui.microcom.name": "マイコン (汎用)",
    "gui.microcom.description": "マイコン (汎用)．GPIO, PWM, ADC, I2C, UART",
    "gui.mboard1.name": "MBoard1",
    "gui.mboard1.description": "松江高専マイコンボード (簡単)．LED, スイッチ, ブザー, サーミスタ温度計",
    "gui.mboard2.name": "MBoard2",
    "gui.mboard2.description": "松江高専マイコンボード (普通)．LED, スイッチ, ブザー, サーミスタ温度計",
    "gui.mboard3.name": "MBoard3",
    "gui.mboard3.description": "松江高専マイコンボード (共通)．液晶ディスプレイ，Wi-Fi，リアルタイムクロック(RTC) など",
    "gui.tools.name": "Tools",
    "gui.tools.description": "デバッグツール．出力など (シリアル通信)",
    "gui.m5stack.name": "M5stack",
    "gui.m5stack.description": "M5stack．モニタ表示",
    "gui.sensor.name": "センサー",
    "gui.sensor.description": "センサー用ブロック．SCD30, etc.",
    "gui.menuBar.uploadToServer": "マイコンへ書き出し",
    "gui.menuBar.uploadToServerOld": "マイコンへ書き出し (旧版)",
    "gui.rboard.name": "RBoard",
    "gui.rboard.description": "RBoard (GPIO, PWM, ADC, ...)",    
    // MBoard共通
    "mboard.sound_C": "ド",
    "mboard.sound_D": "レ",
    "mboard.sound_E": "ミ",
    "mboard.sound_F": "ファ",
    "mboard.sound_G": "ソ",
    "mboard.sound_A": "ラ",
    "mboard.sound_H": "シ",
    "mboard.sound_hiC": "高いド",
    // MBoard1
    "mboard1.name": "簡単",
    "mboard1.led1": "LED 1[NUM1] 2[NUM2] 3[NUM3] 4[NUM4] 5[NUM5] 6[NUM6] 7[NUM7] 8[NUM8]",
    "mboard1.switch1": "スイッチ 1[SWITCH1] 2[SWITCH2] 3[SWITCH3] 4[SWITCH4]",
    "mboard1.sound1": "[SCALE]の音を鳴らす",
    "mboard1.sound2": "音を止める",
    "mboard1.temperature1": "サーミスタ温度計の温度",
    // MBoard
    "mboard2.name": "普通",
    "mboard2.led0": "初期化: [TEXT1]",
    "mboard2.led1": "[TEXT1] を [NUM1] にする",
    "mboard2.switch0": "初期化: [TEXT1]",
    "mboard2.switch1": "[TEXT1] が ON?",
    "mboard2.sound0": "初期化: ブザーを出力モードで使う",
    "mboard2.sound1": "[TEXT1] の音を鳴らす",
    "mboard2.sound2": "音を止める",
    "mboard2.temperature0": "初期化: 基板上のサーミスタ温度計",
    "mboard2.temperature2": "温度計測：サーミスタ温度計",
    "mboard2.temperature1": "サーミスタ温度計の温度",
    //
    "mboard3.name": "共通",
    "mboard3.monitor": "モニターの[NUM]行目に[TEXT]と書く",
    "mboard3.date0": '年月日 時分秒',
    "mboard3.date1": '年-月-日',
    "mboard3.date2": '時:分:秒',
    "mboard3.date3": '年(4桁)',
    "mboard3.date4": '年(下2桁)',
    "mboard3.date5": '月',
    "mboard3.date6": '日',
    "mboard3.date7": '時',
    "mboard3.date8": '分',
    "mboard3.date9": '秒',
    "mboard3.lng": '経度',
    "mboard3.lat": '緯度',
    "mboard3.temp": '温度',
    "mboard3.humi": '湿度',
    "mboard3.co2": 'CO2',
    "mboard3.tz_jst": '日本標準時',
    "mboard3.tz_utc": '世界標準時',
    "mboard3.wifi_init": 'Wi-Fi 初期化: SSID [SSID] パスフレーズ [PASS]',
    "mboard3.wifi_connected": 'Wi-Fi: 接続中?',
    "mboard3.rtc_init": 'RTC 初期化',
    "mboard3.rtc_date": 'RTC : 時刻 [TEXT]',
    "mboard3.send": 'Wi-Fi データ送信: 送信先[TEXT1], ユーザ名[TEXT2], 時刻[TEXT3], [VAR1] [TEXT4], [VAR2]',
    //
    "microcom.name": "汎用",
    "microcom.gpio_output_init": "出力: GPIO[NUM1] を使う",
    "microcom.gpio_output": "出力: GPIO[NUM1] の値を [VALUE] にする",
    "microcom.gpio_input_init": "入力: GPIO[NUM1] を使う",
    "microcom.gpio_input": "入力: GPIO[NUM1] の値",
    "microcom.pwm_init": "PWM: GPIO[NUM1] を使う",
    "microcom.pwm_duty": "PWM: GPIO[NUM1] のデューティー比を [VALUE] (0~1023)にする",
    "microcom.pwm_frequency": "PWM: GPIO[NUM1] 周波数を [VALUE] にする",
    "microcom.adc_init": "ADC: GPIO[NUM1] を使う",
    "microcom.adc_volt": "ADC: GPIO[VALUE] の電圧",
    "microcom.i2c_init": "I2C: GPIO[NUM1] (SCL), GPIO[NUM2] (SDA) を使う",
    "microcom.i2c_write": "出力: I2C: アドレス 0x[NUM1], コマンド 0x[NUM2], 値 0x[NUM3]",
    "microcom.i2c_read": "入力: I2C: アドレス 0x[NUM1], バイト数 [NUM2]",
    "microcom.uart_init": "UART-[TEXT] を使う．通信速度 [NUM]",
    "microcom.uart_write": "出力: UART-[TEXT1]: [TEXT2]",
    "microcom.uart_read": "入力: UART-[TEXT]",
    //
    "kanirobo1.name": "かにロボ",
    "kanirobo1.Menu1.forward": "前",
    "kanirobo1.Menu1.backward": "後ろ",
    "kanirobo1.menu2.right": "右",
    "kanirobo1.menu2.left": "左",
    "kanirobo1.motor": "モーター[TEXT1]を[TEXT2]方向にセット. スピード[TEXT3]%",
    "kanirobo1.value0": "ライトセンサー[TEXT]の値",
    "kanirobo1.command9": "サーボモーター[TEXT]を[NUM]度にする",
    //
    "kanirobo1v2.name": "かにロボ",
    "kanirobo1v2.Menu1.forward": "前",
    "kanirobo1v2.Menu1.backward": "後ろ",
    "kanirobo1v2.menu2.right": "右",
    "kanirobo1v2.menu2.left": "左",
    "kanirobo1v2.motor": "モーター[TEXT1]を[TEXT2]方向にセット. スピード[TEXT3]%",
    "kanirobo1v2.value0": "ライトセンサー[TEXT]の値",
    "kanirobo1v2.command9": "サーボモーター[TEXT]を[NUM]度にする",
//
    "kanirobo2.name": "蟹ロボ",
    "kanirobo2.Menu1.forward": "1",
    "kanirobo2.Menu1.backward": "0",
    "kanirobo2.Menu3.enable": "有効",
    "kanirobo2.Menu3.disable": "無効",
    "kanirobo2.command0": "モーター有効化ピンを初期化",
    "kanirobo2.command1": "モーター有効化ピンを[TEXT]化",
    "kanirobo2.command2": "モーター[TEXT]のGPIOを初期化",
    "kanirobo2.command3": "モーター[TEXT]のPWMを初期化",
    "kanirobo2.command4": "モーター[TEXT1]のGPIOを[TEXT2](1:前,0:後)にセット",
    "kanirobo2.command5": "モーター[TEXT]のPWMのデューティー比を[NUM](0~1023)にセット",
    "kanirobo2.command6": "ライトセンサー[TEXT]を初期化",
    "kanirobo2.value0": "ライトセンサー[TEXT]の値",
    "kanirobo2.command7": "サーボモーター[TEXT]を初期化",
    "kanirobo2.command8": "サーボモーター[TEXT]の周波数を[NUM]にする",
    "kanirobo2.command9": "サーボモーター[TEXT]のデューティー比を[NUM]にする",
    "kanirobo2.value1": "[NUM]度",
    //
    "m5stack.line1": "線",
    "m5stack.line2": "四角",
    "m5stack.line3": "四角(枠のみ)",
    "m5stack.circle1": "円",
    "m5stack.circle2": "円(枠のみ)",
    "m5stack.white": "白",
    "m5stack.black": "黒",
    "m5stack.red": "赤",
    "m5stack.blue": "青",
    "m5stack.green": "緑",
    "m5stack.yellow": "黄",
    "m5stack.m5lcd_write1": 'M5Stack モニター: 位置([POS1], [POS2]) から位置([POS3], [POS4]) へ [TYPE] を書く (色 [COLOR])',
    "m5stack.m5lcd_write2": 'M5Stack モニター: 位置([POS1], [POS2]) を中心に半径 [SIZE] の [TYPE] を書く (色 [COLOR])',
    "m5stack.m5lcd_write3": 'M5Stack モニター: 位置([POS1], [POS2]) から文字サイズ[SIZE] で文字列 [MESS] を書く (色 [COLOR])',
    //
    "sensor.temp": '温度',
    "sensor.humi": '湿度',
    "sensor.co2": 'CO2',
    "sensor.scd30_status": 'SCD30 : データ取得可能?',
    "sensor.scd30": 'SCD30 [TYPE]',
    //
    "tools.name": "デバッグ",
    "tools.puts": "デバッグ出力 [TEXT]",
    // RBoard
    "rboard.name": "RBoard",
    "rboard.gpio_output_init": "GPIO 出力: [NUM1] を使う",
    "rboard.gpio_output": "GPIO 出力: [NUM1] の値を [VALUE] にする",
    "rboard.gpio_input_init": "GPIO 入力: [NUM1] を使う",
    "rboard.gpio_input": "GPIO 入力: [NUM1] の値",
    "rboard.pwm_init": "PWM: [NUM1] を使う",
    "rboard.pwm_duty": "PWM: [NUM1] のデューティー比を [VALUE] (0~1023)にする",
    "rboard.pwm_frequency": "PWM: [NUM1] の周波数を [VALUE] にする",
    "rboard.adc_init": "ADC: [NUM1] を使う",
    "rboard.adc_volt": "ADC: [VALUE] の値",
    "rboard.i2c_init": "I2C を使う",
    "rboard.i2c_write": "I2C 出力: アドレス 0x[NUM1], コマンド 0x[NUM2], 値 [NUM3]",
    "rboard.i2c_read":  "I2C 入力: アドレス 0x[NUM1], バイト数 [NUM2], コマンド 0x[NUM3]",
    "rboard.uart_init": "UART を使う．通信速度 [NUM]",
    "rboard.uart_write": "出力: UART 出力: [TEXT2]",
    "rboard.uart_read": "入力: UART 入力",
    "rboard.puts": "デバッグ出力: [TEXT]"
};
